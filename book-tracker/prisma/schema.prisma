generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id@default(uuid())
  name String
  email String @unique
  password String
  cpf String @unique
  isAdmin Boolean @map("is_admin")
  profiles Profile[] @relation(name: "user_profiles")
  createdAt DateTime @default(now())@map("created_at")
  updatedAt DateTime @updatedAt@map("updated_at")

  @@map("user")
}

model Profile {
  id String @id@default(uuid())
  user User @relation(fields: [userId], references: [id], name: "user_profiles", onDelete: Cascade)
  userId  String
  username String @unique
  imageUrl  String
  bookCollections BookCollection[]@relation(name: "profile_collections")


  @@map("profile")
}

model BookCollection {
  id String @id@default(uuid())
  profile Profile @relation(fields: [profileId], references: [id], name: "profile_collections", onDelete: Cascade)
  profileId  String
  name String @unique
  books Book[]

  @@map("book_collection")
}

model Book {
  id String @id@default(uuid())
  title String @unique
  description String
  author String
  pages Int
  rate Decimal
  price Decimal
  genres Genre[]
  bookCollections BookCollection[]
  createdAt DateTime @default(now())@map("created_at")
  updatedAt DateTime @updatedAt@map("updated_at")

  @@map("book")
}

model Genre {
  id String @id@default(uuid())
  name String @unique
  books Book[]

  @@map("genre")
}

