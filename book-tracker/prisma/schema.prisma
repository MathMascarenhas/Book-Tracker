generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id@default(uuid())
  name String
  email String @unique
  password String
  cpf String @unique
  isPremium Boolean @map("is_premium")
  books Book[] @relation(name: "user_books")
  notes Note[] @relation(name: "user_notes")
  bookCollections BookCollection[] @relation(name: "user_collections")
  createdAt DateTime @default(now())@map("created_at")
  updatedAt DateTime @updatedAt@map("updated_at")

  @@map("user")
}

model BookCollection {
  id String @id@default(uuid())
  user User @relation(fields: [userId], references: [id], name: "user_collections", onDelete: Cascade)
  userId  String
  name String 
  books Book[]

  @@map("book_collection")
}

model Book {
  id String @id@default(uuid())
  user User @relation(fields: [userId], references: [id], name: "user_books", onDelete: Cascade)
  userId  String
  title String @unique
  description String
  imageUrl String
  author String
  pages Int
  rate Decimal
  price Decimal
  bookCollections BookCollection[]
  createdAt DateTime @default(now())@map("created_at")
  updatedAt DateTime @updatedAt@map("updated_at")

  @@map("book")
}

model Note {
  id String  @id@default(uuid())
  user User @relation(fields: [userId], references: [id], name: "user_notes", onDelete: Cascade)
  userId  String
  body String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("note")
}
